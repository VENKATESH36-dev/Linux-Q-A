Project Description:
My project name, RPO (Rental Product Online), refers to a platform that allows users to rent products for short-term usage. Nowadays, there are many applications available in the market for buying and selling both new and used products, but there are limited options specifically for renting. For example, if you are going on a one-week trip and need a high-end camera, purchasing one might cost between 30,000 to 40,000 rupees, which isn't practical for short-term use. In such cases, renting the camera for the required time is a better option, and that's where this application comes in handy.

This application features four types of users:
App Owner: The owner of the application.
Admin: Has full access to all functions in the application, including adding or removing users and products, as well as adjusting prices.
Product Owner: Can upload the products they wish to offer for rent.
Borrower: The end user who needs a product for short-term use. They can search for products, add them to the cart, and rent them based on availability.

Roles and Responsibilities:
As a Java developer, I receive stories from the team, analyze them, and prepare a solution document. This document is then reviewed with my team lead, and based on their feedback or suggestions, I make the necessary corrections. After that, I implement the code changes and perform end-to-end testing to having any errors or exceptions and handle that errors or exceptions. Once everything looks good, I commit and push the changes to the child repository.

For deployment, I prepare a release document and follow specific steps, including database changes if needed. First, I paste the final build link into the Linux OS, extract the tar file, and create a symbolic link. Then, I start the server and verify that everything works correctly on the initial server. Once confirmed, I follow the same steps for the remaining servers.

User Stories
As a Borrower, I want to search for products by category, location, or rental price so that I can easily find items that suit my needs for short-term use.

As a Product Owner, I want to upload and manage listings for my rental products, including photos, descriptions, and pricing, so that potential renters can view and request my items.

As an Admin, I want to manage all users and products in the system, including the ability to remove inappropriate content or deactivate users, so that the platform remains safe and trustworthy.

As an App Owner, I want to track key metrics, such as total active users, product availability, and rental frequency, so that I can analyze the platform's growth and performance.

As a Borrower, I want to add multiple items to a cart and view rental availability, so that I can make bulk requests or select alternative dates for unavailable items.


Challanges:
Primarykey voilation Exception:

When I was developing an application, I encountered a challenge with a Primary Key Violation Exception. This occurred when multiple users attempted to insert a new record with a primary key value that already existed in the database. Such violations can disrupt database integrity and potentially cause the application to crash. I found this issue after the application was in production. To resolve it, I implemented a sequence in Oracle, which automatically generates unique primary key values. Previously, I relied on Hibernate's auto-increment feature for ID generation, but using the sequence resolved the issue effectively.

